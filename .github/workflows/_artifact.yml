name: _artifact

on:
  workflow_call:
    inputs:
      opt:
        description: "make OPT value"
        type: string
        default: "-O3"

jobs:
  Build:
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          # - macos-latest
        include:
          - os: windows-latest
            makefile: Makefile.Win32
            outfile_ext: .exe
            shell: msys2 {0}
          - os: ubuntu-latest
            makefile: Makefile.UNIX
            shell: bash
          # - os: macos-latest
          #   makefile: Makefile.OSX
          #   shell: bash
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    env:
      OPT_INPUT: ${{ inputs.opt }}
    steps:
      - uses: actions/checkout@v5
        with:
            repository: trzy/Supermodel
      - name: Install ubuntu build dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt update
          sudo apt install -y libsdl2-dev libsdl2-net-dev
      - name: Install windows build dependencies
        if: startsWith(matrix.os, 'windows')
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            make
            zip
            git
            mingw64/mingw-w64-x86_64-gcc
            mingw64/mingw-w64-x86_64-SDL2
            mingw64/mingw-w64-x86_64-SDL2_net
      # - name: Install macos build dependencies
      #   if: startsWith(matrix.os, 'macos')
      #   run: |
      #     curl -sLo SDL2.dmg https://github.com/libsdl-org/SDL/releases/download/release-2.30.2/SDL2-2.30.2.dmg
      #     curl -sLo SDL2_net.dmg https://github.com/libsdl-org/SDL_net/releases/download/release-2.2.0/SDL2_net-2.2.0.dmg
      #     hdiutil attach -quiet SDL2.dmg
      #     hdiutil attach -quiet SDL2_net.dmg
      #     mkdir Frameworks
      #     cp -r /Volumes/SDL2/SDL2.framework Frameworks/
      #     cp -r /Volumes/SDL2_net/SDL2_net.framework Frameworks/
      #     xattr -dr com.apple.quarantine Frameworks/SDL2.framework
      #     xattr -dr com.apple.quarantine Frameworks/SDL2_net.framework
      #     hdiutil detach -quiet /Volumes/SDL2
      #     hdiutil detach -quiet /Volumes/SDL2_net
      - name: Compile
        run: |
          make -f Makefiles/${{ matrix.makefile }} release NET_BOARD=1 BIN_DIR=bin OUTFILE=supermodel${{ matrix.outfile_ext }} OPT="${OPT_INPUT:-"-O3 -g"}" LDOPT=""
          echo "pkg_path=$(make -f Makefiles/${{ matrix.makefile }} -j pkg/path)" >> $GITHUB_ENV
      - name: Validate
        run: ./bin/supermodel${{ matrix.outfile_ext }} -print-games
      - name: Package
        run: |
          make -f Makefiles/${{ matrix.makefile }} pkg NET_BOARD=1 BIN_DIR=bin OUTFILE=supermodel${{ matrix.outfile_ext }} OPT="${OPT_INPUT:-"-O3 -g"}" LDOPT=""
      - uses: actions/upload-artifact@v4
        with:
          name: supermodel-${{ runner.os }}-${{ runner.arch }}
          path: ${{ env.pkg_path }}
  
  Release:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Set build date
        id: vars
        run: |
          echo "BUILD_DATE=$(date --rfc-3339=date)" >> $GITHUB_ENV
      - name: Download Linux Artifact
        uses: actions/download-artifact@master
        with:
          name: supermodel-Linux-X64
          path: artifacts
      - name: Rename
        run: mv artifacts/supermodel-Linux-X64.tgz artifacts/supermodel-Linux-x64_${{ env.BUILD_DATE }}.tgz
      # - name: Download Mac Artifact
      #   uses: actions/download-artifact@master
      #   with:
      #     name: supermodel-macOS-ARM64
      #     path: artifacts
      # - name: Rename
      #   run: mv artifacts/supermodel-macOS-ARM64.tgz artifacts/supermodel-macOS-arm64_${{ env.BUILD_DATE }}.tgz
      - name: Download Windows Artifact
        uses: actions/download-artifact@master
        with:
          name: supermodel-Windows-X64
          path: artifacts
      - name: Rename
        run: mv artifacts/supermodel-Windows-X64.zip artifacts/supermodel-Windows-x64_${{ env.BUILD_DATE }}.zip
      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.BUILD_DATE }}
          name: Release build ${{ env.BUILD_DATE }}
          draft: false
          prerelease: false
          files: artifacts/*
